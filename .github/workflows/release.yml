name: "release"

on:
  push:
    branches:
      - master

jobs:
  state:
    name: Fetch State
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Set up environment
        uses: ./.github/actions/setup
      - name: Fetch State
        id: state
        run: bash ./scripts/versions.sh
    outputs:
      local_version: ${{ steps.state.outputs.local_version }}
      version_changed: ${{ steps.state.outputs.version_changed }}

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: state
    if: needs.state.outputs.version_changed != 'not_changed'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.state.outputs.local_version }}
          release_name: Release v${{ needs.state.outputs.local_version }}
          body: |
            # Release notes v${{ needs.state.outputs.local_version }} ðŸŽ‰

            ## This is a ${{ needs.state.outputs.version_changed }} release

            To be filled...
          draft: false
          prerelease: false

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: state
    if: needs.state.outputs.version_changed != 'not_changed'
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Setup
        uses: ./.github/actions/setup
      - name: Publish to npm
        run: |
          npm config set //registry.npmjs.org/:_authToken ${{ secrets.NPM_ACCESS_TOKEN }}
          npm run publish-to-npm
